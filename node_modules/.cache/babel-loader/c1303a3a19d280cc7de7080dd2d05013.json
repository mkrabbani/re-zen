{"ast":null,"code":"import { createParser, system } from \"@styled-system/core\";\nimport { t } from \"../utils\";\nvar config = {\n  bg: t.colors(\"background\"),\n  bgColor: t.colors(\"backgroundColor\"),\n  background: t.colors(\"background\"),\n  backgroundColor: t.colors(\"backgroundColor\"),\n  backgroundImage: true,\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  bgImage: t.prop(\"backgroundImage\"),\n  bgImg: t.prop(\"backgroundImage\"),\n  bgBlendMode: t.prop(\"backgroundBlendMode\"),\n  bgSize: t.prop(\"backgroundSize\"),\n  bgPosition: t.prop(\"backgroundPosition\"),\n  bgPos: t.prop(\"backgroundPosition\"),\n  bgRepeat: t.prop(\"backgroundRepeat\"),\n  bgAttachment: t.prop(\"backgroundAttachment\")\n};\nexport var background = system(config);\nexport var backgroundParser = createParser(config);","map":{"version":3,"sources":["../../../src/config/background.ts"],"names":["config","bg","t","bgColor","background","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundBlendMode","bgImage","bgImg","bgBlendMode","bgSize","bgPosition","bgPos","bgRepeat","bgAttachment","system","backgroundParser","createParser"],"mappings":"AACA,SAAA,YAAA,EAAA,MAAA,QAAA,qBAAA;AACA,SAAA,CAAA,QAAA,UAAA;AAEA,IAAMA,MAAc,GAAG;AACrBC,EAAAA,EAAE,EAAEC,CAAC,CAADA,MAAAA,CADiB,YACjBA,CADiB;AAErBC,EAAAA,OAAO,EAAED,CAAC,CAADA,MAAAA,CAFY,iBAEZA,CAFY;AAGrBE,EAAAA,UAAU,EAAEF,CAAC,CAADA,MAAAA,CAHS,YAGTA,CAHS;AAIrBG,EAAAA,eAAe,EAAEH,CAAC,CAADA,MAAAA,CAJI,iBAIJA,CAJI;AAKrBI,EAAAA,eAAe,EALM,IAAA;AAMrBC,EAAAA,cAAc,EANO,IAAA;AAOrBC,EAAAA,kBAAkB,EAPG,IAAA;AAQrBC,EAAAA,gBAAgB,EARK,IAAA;AASrBC,EAAAA,oBAAoB,EATC,IAAA;AAUrBC,EAAAA,mBAAmB,EAVE,IAAA;AAWrBC,EAAAA,OAAO,EAAEV,CAAC,CAADA,IAAAA,CAXY,iBAWZA,CAXY;AAYrBW,EAAAA,KAAK,EAAEX,CAAC,CAADA,IAAAA,CAZc,iBAYdA,CAZc;AAarBY,EAAAA,WAAW,EAAEZ,CAAC,CAADA,IAAAA,CAbQ,qBAaRA,CAbQ;AAcrBa,EAAAA,MAAM,EAAEb,CAAC,CAADA,IAAAA,CAda,gBAcbA,CAda;AAerBc,EAAAA,UAAU,EAAEd,CAAC,CAADA,IAAAA,CAfS,oBAeTA,CAfS;AAgBrBe,EAAAA,KAAK,EAAEf,CAAC,CAADA,IAAAA,CAhBc,oBAgBdA,CAhBc;AAiBrBgB,EAAAA,QAAQ,EAAEhB,CAAC,CAADA,IAAAA,CAjBW,kBAiBXA,CAjBW;AAkBrBiB,EAAAA,YAAY,EAAEjB,CAAC,CAADA,IAAAA,CAAAA,sBAAAA;AAlBO,CAAvB;AAgGA,OAAO,IAAME,UAAU,GAAGgB,MAAM,CAAzB,MAAyB,CAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAGC,YAAY,CAArC,MAAqC,CAArC","sourcesContent":["import * as CSS from \"csstype\"\nimport { createParser, Config, system } from \"@styled-system/core\"\nimport { ResponsiveValue, Length, t } from \"../utils\"\n\nconst config: Config = {\n  bg: t.colors(\"background\"),\n  bgColor: t.colors(\"backgroundColor\"),\n  background: t.colors(\"background\"),\n  backgroundColor: t.colors(\"backgroundColor\"),\n  backgroundImage: true,\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  bgImage: t.prop(\"backgroundImage\"),\n  bgImg: t.prop(\"backgroundImage\"),\n  bgBlendMode: t.prop(\"backgroundBlendMode\"),\n  bgSize: t.prop(\"backgroundSize\"),\n  bgPosition: t.prop(\"backgroundPosition\"),\n  bgPos: t.prop(\"backgroundPosition\"),\n  bgRepeat: t.prop(\"backgroundRepeat\"),\n  bgAttachment: t.prop(\"backgroundAttachment\"),\n}\n\nexport interface BackgroundProps {\n  /**\n   * The CSS `background` property\n   */\n  bg?: ResponsiveValue<CSS.Property.Background<Length>>\n  /**\n   * The CSS `background` property\n   */\n  background?: ResponsiveValue<CSS.Property.Background<Length>>\n  /**\n   * The CSS `background-color` property\n   */\n  bgColor?: ResponsiveValue<CSS.Property.BackgroundColor>\n  /**\n   * The CSS `background-color` property\n   */\n  backgroundColor?: ResponsiveValue<CSS.Property.BackgroundColor>\n  /**\n   * The CSS `background-image` property\n   */\n  backgroundImage?: ResponsiveValue<CSS.Property.BackgroundImage>\n  /**\n   * The CSS `background-blend-mode` property\n   */\n  backgroundBlendMode?: ResponsiveValue<CSS.Property.BackgroundBlendMode>\n  /**\n   * The CSS `background-blend-mode` property\n   */\n  bgBlendMode?: ResponsiveValue<CSS.Property.BackgroundBlendMode>\n  /**\n   * The CSS `background-size` property\n   */\n  backgroundSize?: ResponsiveValue<CSS.Property.BackgroundSize<Length>>\n  /**\n   * The CSS `background-position` property\n   */\n  bgPos?: ResponsiveValue<CSS.Property.BackgroundPosition<Length>>\n  /**\n   * The CSS `background-position` property\n   */\n  backgroundPosition?: ResponsiveValue<CSS.Property.BackgroundPosition<Length>>\n  /**\n   * The CSS `background-image` property\n   */\n  bgImage?: ResponsiveValue<CSS.Property.BackgroundImage>\n  /**\n   * The CSS `background-image` property\n   */\n  bgImg?: ResponsiveValue<CSS.Property.BackgroundImage>\n  /**\n   * The CSS `background-repeat` property\n   */\n  bgRepeat?: ResponsiveValue<CSS.Property.BackgroundRepeat>\n  /**\n   * The CSS `background-repeat` property\n   */\n  backgroundRepeat?: ResponsiveValue<CSS.Property.BackgroundRepeat>\n  /**\n   * The CSS `background-size` property\n   */\n  bgSize?: ResponsiveValue<CSS.Property.BackgroundSize<Length>>\n  /**\n   * The CSS `background-attachment` property\n   */\n  bgAttachment?: ResponsiveValue<CSS.Property.BackgroundAttachment>\n  /**\n   * The CSS `background-attachment` property\n   */\n  backgroundAttachment?: ResponsiveValue<CSS.Property.BackgroundAttachment>\n  /**\n   * The CSS `background-position` property\n   */\n  bgPosition?: ResponsiveValue<CSS.Property.BackgroundPosition<Length>>\n}\n\nexport const background = system(config)\nexport const backgroundParser = createParser(config)\n"]},"metadata":{},"sourceType":"module"}